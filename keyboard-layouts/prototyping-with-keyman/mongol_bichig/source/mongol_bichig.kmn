c Keyman keyboard generated by ImportKeyboard
c Imported: 2020-02-26 10:56:31
c 
c Source Keyboard File: KBDMON.DLL
c Source KeyboardID: 00000450
c 
c 
c Run by: Liang Hai

store(&VERSION) '10.0'
store(&NAME) 'Mongol Bichig'
store(&VISUALKEYBOARD) 'mongol_bichig.kvks'
store(&BITMAP) 'mongol_bichig.ico'
store(&LAYOUTFILE) 'mongol_bichig.keyman-touch-layout'
store(&COPYRIGHT) '© 2020 Liang Hai'
store(&KEYBOARDVERSION) '0.1'
store(&TARGETS) 'any'

begin Unicode > use(main)

group(main) using keys

c # Basic layout
c # ------------

c ## Row 1

+ [K_BKQUOTE] > '='
+ [SHIFT K_BKQUOTE] > '+'

+ [K_1] > '№'
+ [SHIFT K_1] > '1'

+ [K_2] > '-'
+ [SHIFT K_2] > '2'

+ [K_3] > '"'
+ [SHIFT K_3] > '3'

+ [K_4] > '₮'
+ [SHIFT K_4] > '4'

+ [K_5] > ':'
+ [SHIFT K_5] > '5'

+ [K_6] > '.'
+ [SHIFT K_6] > '6'

+ [K_7] > '_'
+ [SHIFT K_7] > '7'

+ [K_8] > ','
+ [SHIFT K_8] > '8'

+ [K_9] > '%'
+ [SHIFT K_9] > '9'

+ [K_0] > '?'
+ [SHIFT K_0] > '0'

+ [K_HYPHEN] > nul
+ [SHIFT K_HYPHEN] > nul

+ [K_EQUAL] > nul
+ [SHIFT K_EQUAL] > nul

c [K_BKSLASH] is located here in the MNS 4332: 1996 layout,
c   but is located at the end of row 2 in the US English layout.

c ## Row 2

+ [K_Q] > 'ᠹ'

+ [K_W] > 'ᠼ'

+ [K_E] > 'ᠤ'

+ [K_R] > 'ᠵ'
+ [SHIFT K_R] > 'ᠿ'

+ [K_T] > 'ᠡ'
+ [SHIFT K_T] > 'ᠧ'

+ [K_Y] > 'ᠨ'

+ [K_U] > 'ᠭ'

+ [K_I] > 'ᠱ'

+ [K_O] > 'ᠦ'

+ [K_P] > 'ᠽ'

+ [K_LBRKT] > 'ᠻ'

+ [K_RBRKT] > '᠊'
+ [SHIFT K_RBRKT] > '᠇'

+ [K_BKSLASH] > '\'  c Located at the end of row 1 in the MNS 4332: 1996 layout.
+ [SHIFT K_BKSLASH] > '|'

c ## Row 3

+ [K_A] > 'ᠶ'

c + [K_S] >

+ [K_D] > 'ᠪ'

+ [K_F] > 'ᠥ'

+ [K_G] > 'ᠠ'

+ [K_H] > 'ᠬ'
+ [SHIFT K_H] > 'ᠾ'

+ [K_J] > 'ᠷ'

+ [K_K] > 'ᠣ'

+ [K_L] > 'ᠯ'

+ [K_COLON] > 'ᠳ'  c K_COLON is actually for ';'.

+ [K_QUOTE] > 'ᠫ'

c ## Row 4

c + [K_Z] >

+ [K_X] > 'ᠴ'

c + [K_C] >

+ [K_V] > 'ᠰ'

+ [K_B] > 'ᠮ'

+ [K_N] > 'ᠢ'

+ [K_M] > 'ᠲ'

c + [K_COMMA] >

+ [K_PERIOD] > 'ᠸ'

+ [K_SLASH] > nul
+ [SHIFT K_SLASH] > nul

c ## Row 5

+ [K_SPACE] > U+0020  c SPACE
+ [SHIFT K_SPACE] > U+202f  c NARROW NO-BREAK SPACE

c # Sequences
c # ---------

'ᠯ' + [SHIFT K_H] > 'ᡀ'

c # Rotas
c # -----

store(next) [K_SLASH]

store(vowel.masculine) 'ᠠ' 'ᠣ' 'ᠤ'
store(vowel.feminine)  'ᠡ' 'ᠧ' 'ᠥ' 'ᠦ'
store(vowel.neuter)    'ᠢ'

store(vowel) \
  outs(vowel.masculine) outs(vowel.feminine) outs(vowel.neuter)

store(consonant) \
  'ᠨ' 'ᠩ' 'ᠪ' 'ᠫ' 'ᠬ' 'ᠭ' 'ᠮ' 'ᠯ' 'ᠰ' 'ᠱ' 'ᠲ' 'ᠳ' 'ᠴ' 'ᠵ' 'ᠶ' 'ᠷ' 'ᠸ' \
  'ᠹ' 'ᠻ' 'ᠼ' 'ᠽ' 'ᠾ' 'ᠿ' 'ᡀ' 'ᡁ' 'ᡂ'

store(MVS) U+180E

store(FVS1) U+180B
store(FVS2) U+180C
store(FVS3) U+180D

c ## Syllable codas

'ᠨ' + outs(next) > 'ᠩ'
'ᠩ' + outs(next) > 'ᠨ'

'ᠢ' 'ᠭ'       + outs(next) > 'ᠢ' 'ᠭ' $FVS1  c (g has an alternative form only after i)
'ᠢ' 'ᠭ' $FVS1 + outs(next) > 'ᠢ' 'ᠭ'

'ᠳ'       + outs(next) > 'ᠳ' $FVS1
'ᠳ' $FVS1 + outs(next) > 'ᠳ'

c ## (C)V syllables

c ### General

'ᠠ'       + outs(next) > 'ᠠ' $FVS1
'ᠠ' $FVS1 + outs(next) > 'ᠠ'

'ᠦ'       + outs(next) > 'ᠦ' $FVS1
'ᠦ' $FVS1 + outs(next) > 'ᠦ'

'ᠳ'       any(vowel) + outs(next) > 'ᠳ' $FVS1 index(vowel, 2)
'ᠳ' $FVS1 any(vowel) + outs(next) > 'ᠳ'       index(vowel, 3)

store(vowel.rounded) 'ᠣ' 'ᠤ' 'ᠥ' 'ᠦ'

any(consonant) any(vowel.rounded)       + outs(next) > index(consonant, 1) index(vowel.rounded, 2) $FVS1
any(consonant) any(vowel.rounded) $FVS1 + outs(next) > index(consonant, 1) index(vowel.rounded, 2)

c The section above overlaps with the preceding one and needs handling.
c The possible FVS between consonant and vowel.rounded needs to be ignored.

c ### Chachlag

'ᠨ'      'ᠠ' + outs(next) > 'ᠨ' $MVS 'ᠠ'
'ᠨ' $MVS 'ᠠ' + outs(next) > 'ᠨ'      'ᠠ'
'ᠨ'      'ᠡ' + outs(next) > 'ᠨ' $MVS 'ᠡ'
'ᠨ' $MVS 'ᠡ' + outs(next) > 'ᠨ'      'ᠡ'

'ᠬ'      'ᠠ' + outs(next) > 'ᠬ' $MVS 'ᠠ'
'ᠬ' $MVS 'ᠠ' + outs(next) > 'ᠬ'      'ᠠ'

'ᠭ'      'ᠠ' + outs(next) > 'ᠭ' $MVS 'ᠠ'
'ᠭ' $MVS 'ᠠ' + outs(next) > 'ᠭ'      'ᠠ'

'ᠮ'      'ᠠ' + outs(next) > 'ᠮ' $MVS 'ᠠ'
'ᠮ' $MVS 'ᠠ' + outs(next) > 'ᠮ'      'ᠠ'
'ᠮ'      'ᠡ' + outs(next) > 'ᠮ' $MVS 'ᠡ'
'ᠮ' $MVS 'ᠡ' + outs(next) > 'ᠮ'      'ᠡ'

'ᠯ'      'ᠠ' + outs(next) > 'ᠯ' $MVS 'ᠠ'
'ᠯ' $MVS 'ᠠ' + outs(next) > 'ᠯ'      'ᠠ'
'ᠯ'      'ᠡ' + outs(next) > 'ᠯ' $MVS 'ᠡ'
'ᠯ' $MVS 'ᠡ' + outs(next) > 'ᠯ'      'ᠡ'

'ᠶ'      'ᠠ' + outs(next) > 'ᠶ' $MVS 'ᠠ'
'ᠶ' $MVS 'ᠠ' + outs(next) > 'ᠶ'      'ᠠ'
'ᠶ'      'ᠡ' + outs(next) > 'ᠶ' $MVS 'ᠡ'
'ᠶ' $MVS 'ᠡ' + outs(next) > 'ᠶ'      'ᠡ'

'ᠷ'      'ᠠ' + outs(next) > 'ᠷ' $MVS 'ᠠ'
'ᠷ' $MVS 'ᠠ' + outs(next) > 'ᠷ'      'ᠠ'
'ᠷ'      'ᠡ' + outs(next) > 'ᠷ' $MVS 'ᠡ'
'ᠷ' $MVS 'ᠡ' + outs(next) > 'ᠷ'      'ᠡ'

'ᠸ'      'ᠠ' + outs(next) > 'ᠸ' $MVS 'ᠠ'
'ᠸ' $MVS 'ᠠ' + outs(next) > 'ᠸ'      'ᠠ'
'ᠸ'      'ᠡ' + outs(next) > 'ᠸ' $MVS 'ᠡ'
'ᠸ' $MVS 'ᠡ' + outs(next) > 'ᠸ'      'ᠡ'

c ### Mandarin transcriptions

'ᠵ' 'ᠢ' + outs(next) > 'ᡁ' 'ᠢ'
'ᡁ' 'ᠢ' + outs(next) > 'ᠵ' 'ᠢ'

'ᠴ' 'ᠢ' + outs(next) > 'ᡂ' 'ᠢ'
'ᡂ' 'ᠢ' + outs(next) > 'ᠴ' 'ᠢ'

'ᠰ' 'ᠢ' + outs(next) > 'ᠱ' 'ᠢ'
'ᠱ' 'ᠢ' + outs(next) > 'ᠰ' 'ᠢ'

'ᠷ' 'ᠢ' + outs(next) > 'ᠿ' 'ᠢ'
'ᠿ' 'ᠢ' + outs(next) > 'ᠷ' 'ᠢ'
